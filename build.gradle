plugins {
	id 'fabric-loom' version '0.2.2-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version

repositories {
  jcenter()
  maven {
    name = 'Fabric'
    url = 'https://maven.fabricmc.net/'
  }
  maven {
    name = 'Cotton'
    url 'http://server.bbkr.space:8081/artifactory/libs-release'
  }
  maven {
    name = 'Curseforge'
    url "https://minecraft.curseforge.com/api/maven"
  }
  mavenLocal()
}

dependencies {
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}"
  modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
  modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
  
  compileOnly ("com.google.code.findbugs:jsr305:3.0.2") {transitive = false;}
  
	modCompile "io.github.cottonmc:cotton:${project.cotton_version}"
	modCompile "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"
	include "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"
	
  modCompile "me.shedaniel.cloth:config-2:${project.cloth_config_version}"
  include "me.shedaniel.cloth:config-2:${project.cloth_config_version}"
  
/*  afterEvaluate {
    subprojects.each {
      compile project("${it.name}")
      include project("${it.name}")
    }
  }*/
}

allprojects {
  apply plugin: 'maven-publish'
  apply plugin: 'fabric-loom'
  
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  group = project.maven_group
  
  
  minecraft {
    refmapName = "mixins.tools.altcraft.refmap.json"
  }

  repositories {
    jcenter()
    maven {
      name = 'Fabric'
      url = 'https://maven.fabricmc.net/'
    }
    maven {
      name = 'Cotton'
      url 'http://server.bbkr.space:8081/artifactory/libs-release'
    }
    maven {
      name = 'Curseforge'
      url "https://minecraft.curseforge.com/api/maven"
    }
    mavenLocal()
  }
  
  dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    compileOnly ("com.google.code.findbugs:jsr305:3.0.2") {transitive = false;}
  }
  
  afterEvaluate {
    processResources {
      inputs.property "version", project.version
    
      from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
      }
    
      from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
      }
    }
  }
  
  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
  }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
